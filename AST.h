#ifndef AST_H
#define AST_H

extern int indent;


struct Program				*Build_Program(struct ExtDefList *, int);
struct ExtDefList			*Build_ExtDefList(struct ExtDef *, struct ExtDefList *, int);
struct ExtDef				*Build_ExtDef(void *, void (*)(void *), void (*)(void *), struct IRChain *(*)(void *), int);
struct ExtDef_A				*Build_ExtDef_A(struct Specifier *, struct ExtDecList *);
struct ExtDef_B				*Build_ExtDef_B(struct Specifier *);
struct ExtDef_C				*Build_ExtDef_C(struct Specifier *, struct FunDec *, struct CompSt *);
struct ExtDef_D				*Build_ExtDef_D(struct Specifier *, struct FunDec *);
struct ExtDecList			*Build_ExtDecList(struct VarDec *, struct ExtDecList *, int);
struct Specifier			*Build_Specifier(void *, void (*)(void *), struct TYPE *(*)(void *), int);
struct Specifier_A			*Build_Specifier_A(DataType);
struct Specifier_B			*Build_Specifier_B(struct StructSpecifier *);
struct StructSpecifier		*Build_StructSpecifier(void *, void (*)(void *), struct StructureType *(*)(void *), int);
struct StructSpecifier_A	*Build_StructSpecifier_A(struct OptTag *, struct DefList *);
struct StructSpecifier_B	*Build_StructSpecifier_B(struct Tag *);
struct OptTag				*Build_OptTag(struct ID *, int);
struct Tag					*Build_Tag(struct ID *, int);
struct VarDec				*Build_VarDec(void *, void (*)(void *), struct SymbolsTable *(*)(void *, struct TYPE *), struct StructureType *(*)(void *, struct TYPE *), struct Argument *(*)(void *, struct TYPE *), struct IRChain *(*)(void *), int);
struct VarDec_A				*Build_VarDec_A(struct ID *);
struct VarDec_B				*Build_VarDec_B(struct VarDec *, struct Exp_INT *);
struct FunDec				*Build_FunDec(struct ID *, struct VarList *, int);
struct VarList				*Build_VarList(struct ParamDec *, struct VarList *, int);
struct ParamDec				*Build_ParamDec(struct Specifier *, struct VarDec *, int);
struct CompSt				*Build_CompSt(struct DefList *, struct StmtList *, int);
struct StmtList				*Build_StmtList(struct Stmt *, struct StmtList *, int);
struct Stmt					*Build_Stmt(void *, void (*)(void *), void (*)(void *, struct TYPE *), struct IRChain *(*)(void *), int);
struct Stmt_Exp				*Build_Stmt_Exp(struct Exp *);
struct Stmt_CompSt			*Build_Stmt_CompSt(struct CompSt *);
struct Stmt_Return			*Build_Stmt_Return(struct Exp *);
struct Stmt_If				*Build_Stmt_If(struct Exp *, struct Stmt *);
struct Stmt_If_Else			*Build_Stmt_If_Else(struct Exp *, struct Stmt *, struct Stmt *);
struct Stmt_While			*Build_Stmt_While(struct Exp *, struct Stmt *);
struct DefList				*Build_DefList(struct Def *, struct DefList *, int);
struct Def					*Build_Def(struct Specifier *, struct DecList *, int);
struct DecList				*Build_DecList(struct Dec *, struct DecList *, int);
struct Dec					*Build_Dec(struct VarDec *, struct Exp *, int);
struct Exp					*Build_Exp(void *, int, void (*)(void *),struct TYPE *(*)(void *), struct IRChain *(*)(void *, struct Operand *), struct IRChain *(*)(void *, int, int), int);
struct Exp_Assign			*Build_Exp_Assign(struct Exp *, struct Exp *);
struct Exp_Binary_Rel		*Build_Exp_Binary_Rel(struct Exp *, struct Exp *, BinaryOP_Relop);
struct Exp_Binary_Cal		*Build_Exp_Binary_Cal(struct Exp *, struct Exp *, BinaryOP_Calop);
struct Exp_Unary			*Build_Exp_Unary(struct Exp *, UnaryOP);
struct Exp_Function			*Build_Exp_Function(struct ID *, struct Args *);
struct Exp_Array			*Build_Exp_Array(struct Exp *, struct Exp *);
struct Exp_Attribute		*Build_Exp_Attribute(struct Exp *, struct ID *);
struct Exp_Variable			*Build_Exp_Variable(struct ID *);
struct Exp_INT				*Build_Exp_INT(int);
struct Exp_FLOAT			*Build_Exp_FLOAT(float);
struct Args					*Build_Args(struct Exp *, struct Args *, int);
struct ID					*Build_ID(char *);


void Visit_Program(struct Program *);
void Visit_ExtDefList(struct ExtDefList *);
void Visit_ExtDef(struct ExtDef *);
void Visit_ExtDef_A(void *);
void Visit_ExtDef_B(void *);
void Visit_ExtDef_C(void *);
void Visit_ExtDef_D(void *);
void Visit_ExtDecList(struct ExtDecList *);
void Visit_Specifier(struct Specifier *);
void Visit_Specifier_A(void *);
void Visit_Specifier_B(void *);
void Visit_StructSpecifier(struct StructSpecifier *);
void Visit_StructSpecifier_A(void *);
void Visit_StructSpecifier_B(void *);
void Visit_OptTag(struct OptTag *);
void Visit_Tag(struct Tag *);
void Visit_VarDec(struct VarDec *);
void Visit_VarDec_A(void *);
void Visit_VarDec_B(void *);
void Visit_FunDec(struct FunDec *);
void Visit_VarList(struct VarList *);
void Visit_ParamDec(struct ParamDec *);
void Visit_CompSt(struct CompSt *);
void Visit_StmtList(struct StmtList *);
void Visit_Stmt(struct Stmt *);
void Visit_Stmt_Exp(void *);
void Visit_Stmt_CompSt(void *);
void Visit_Stmt_Return(void *);
void Visit_Stmt_If(void *);
void Visit_Stmt_If_Else(void *);
void Visit_Stmt_While(void *);
void Visit_DefList(struct DefList *);
void Visit_Def(struct Def *);
void Visit_DecList(struct DecList *);
void Visit_Dec(struct Dec *);
void Visit_Exp(struct Exp *);
void Visit_Exp_Assign(void *);
void Visit_Exp_Binary_Rel(void *);
void Visit_Exp_Binary_Cal(void *);
void Visit_Exp_Unary(void *);
void Visit_Exp_Function(void *);
void Visit_Exp_Array(void *);
void Visit_Exp_Attribute(void *);
void Visit_Exp_Variable(void *);
void Visit_Exp_INT(void *);
void Visit_Exp_FLOAT(void *);
void Visit_Args(struct Args *);
void Visit_ID(void *);
void Visit_DataType(DataType);
void Visit_BinaryOP_Calop(BinaryOP_Calop);
void Visit_UnaryOP(UnaryOP);

//char	*Sign_UnaryOP(UnaryOP);
char	*Sign_BinaryOP(BinaryOP_Calop);
#endif
